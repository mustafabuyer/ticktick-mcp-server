version: '3.8'

services:
  ticktick-mcp:
    build:
      context: .
      dockerfile: Dockerfile
    image: ticktick-mcp:latest
    container_name: ticktick-mcp-server
    ports:
      - "${PORT:-3000}:3000"
    environment:
      # Server Configuration
      - NODE_ENV=production
      - PORT=${PORT:-3000}
      - MODE=http
      - LOG_LEVEL=${LOG_LEVEL:-info}
      - MCP_API_KEY=${MCP_API_KEY}
      
      # TickTick OAuth Configuration
      - TICKTICK_CLIENT_ID=${TICKTICK_CLIENT_ID}
      - TICKTICK_CLIENT_SECRET=${TICKTICK_CLIENT_SECRET}
      - TICKTICK_REDIRECT_URI=${TICKTICK_REDIRECT_URI:-http://localhost:3000/oauth/callback}
      - TICKTICK_SCOPE=${TICKTICK_SCOPE:-tasks:read tasks:write}
      
      # TickTick API Configuration
      - TICKTICK_API_BASE_URL=${TICKTICK_API_BASE_URL:-https://api.ticktick.com/open/v1}
      - TICKTICK_ACCESS_TOKEN=${TICKTICK_ACCESS_TOKEN}
      - TICKTICK_REFRESH_TOKEN=${TICKTICK_REFRESH_TOKEN}
    
    restart: unless-stopped
    
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    
    # Resource limits
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 512M
        reservations:
          cpus: '0.25'
          memory: 128M
    
    # Logging configuration
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    
    # Security options
    security_opt:
      - no-new-privileges:true
    read_only: true
    tmpfs:
      - /tmp
    
    networks:
      - ticktick-network

  # Optional: Add n8n service for testing
  # n8n:
  #   image: n8nio/n8n:latest
  #   container_name: n8n
  #   ports:
  #     - "5678:5678"
  #   environment:
  #     - N8N_BASIC_AUTH_ACTIVE=true
  #     - N8N_BASIC_AUTH_USER=admin
  #     - N8N_BASIC_AUTH_PASSWORD=password
  #   volumes:
  #     - n8n_data:/home/node/.n8n
  #   networks:
  #     - ticktick-network
  #   depends_on:
  #     - ticktick-mcp

networks:
  ticktick-network:
    driver: bridge

# volumes:
#   n8n_data: